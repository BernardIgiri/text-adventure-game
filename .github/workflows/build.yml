name: Build & Release

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            ext: tar.gz
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            ext: zip
          - os: macos-latest
            target: x86_64-apple-darwin
            ext: tar.gz

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cargo-nextest
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest

      - name: Run tests
        run: cargo nextest run --all-targets --all-features

      - name: Verify version matches tag
        shell: bash
        run: |
          TAG_VERSION=${GITHUB_REF_NAME#v}
          CARGO_VERSION=$(grep '^version =' Cargo.toml | sed 's/.*"\(.*\)".*/\1/')
          if [ "$TAG_VERSION" != "$CARGO_VERSION" ]; then
            echo "Version mismatch: Git tag is $TAG_VERSION but Cargo.toml has $CARGO_VERSION"
            exit 1
          fi

      - name: Install musl tools (Linux only)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y musl-tools

      - name: Build release binary
        run: cargo build --release --target=${{ matrix.target }}

      - name: Package binary (Unix)
        if: matrix.os != 'windows-latest'
        shell: bash
        run: |
          mkdir dist
          cp target/${{ matrix.target }}/release/text-adventure-game* dist/
          cd dist
          tar -czvf ../text-adventure-game-${{ matrix.target }}.${{ matrix.ext }} *

      - name: Package binary (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          $output = "text-adventure-game-${{ matrix.target }}.${{ matrix.ext }}"
          $input = Get-ChildItem target/${{ matrix.target }}/release/text-adventure-game*.exe
          mkdir dist
          Copy-Item $input.FullName -Destination dist/
          Compress-Archive -Path dist/* -DestinationPath $output

      - name: Upload release asset
        uses: softprops/action-gh-release@v2
        with:
          name: text-adventure-game-${{ matrix.target }}
          tag_name: ${{ github.ref_name }}
          files: text-adventure-game-${{ matrix.target }}.${{ matrix.ext }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
